// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/[locale]" | "/[locale]/about" | "/[locale]/account" | "/[locale]/account/agency" | "/[locale]/account/agency/modify" | "/[locale]/account/help" | "/[locale]/account/modify" | "/[locale]/account/settings" | "/[locale]/action_center" | "/[locale]/analytics" | "/[locale]/bookings" | "/[locale]/bookings/[id]" | "/[locale]/bookings/[id]/confirm" | "/[locale]/bookings/[id]/expenses" | "/[locale]/bookings/[id]/expenses/modify" | "/[locale]/bookings/[id]/expenses/new" | "/[locale]/bookings/[id]/modify" | "/[locale]/bookings/[id]/reconcile" | "/[locale]/bookings/[id]/transactions" | "/[locale]/bookings/[id]/transactions/modify" | "/[locale]/bookings/[id]/transactions/new" | "/[locale]/bookings/[id]/trip_logs" | "/[locale]/bookings/new" | "/[locale]/change_password" | "/[locale]/customers" | "/[locale]/customers/[id]" | "/[locale]/customers/[id]/modify" | "/[locale]/customers/new" | "/[locale]/drivers" | "/[locale]/drivers/[id]" | "/[locale]/drivers/[id]/leaves" | "/[locale]/drivers/[id]/leaves/modify" | "/[locale]/drivers/[id]/leaves/new" | "/[locale]/drivers/[id]/modify" | "/[locale]/drivers/new" | "/[locale]/faq" | "/[locale]/features" | "/[locale]/forgot_password" | "/[locale]/home" | "/[locale]/login" | "/[locale]/onboarding" | "/[locale]/onboarding/add_driver" | "/[locale]/onboarding/add_user" | "/[locale]/onboarding/add_vehicle" | "/[locale]/onboarding/create_agency" | "/[locale]/onboarding/success" | "/[locale]/pricing" | "/[locale]/signup" | "/[locale]/users" | "/[locale]/users/[id]" | "/[locale]/users/[id]/modify" | "/[locale]/users/new" | "/[locale]/vehicles" | "/[locale]/vehicles/[id]" | "/[locale]/vehicles/[id]/modify" | "/[locale]/vehicles/[id]/vehicle_services" | "/[locale]/vehicles/[id]/vehicle_services/modify" | "/[locale]/vehicles/[id]/vehicle_services/new" | "/[locale]/vehicles/new"
type PageRoutes = never
type LayoutRoutes = "/[locale]" | "/[locale]/onboarding"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/[locale]": { "locale": string; }
  "/[locale]/about": { "locale": string; }
  "/[locale]/account": { "locale": string; }
  "/[locale]/account/agency": { "locale": string; }
  "/[locale]/account/agency/modify": { "locale": string; }
  "/[locale]/account/help": { "locale": string; }
  "/[locale]/account/modify": { "locale": string; }
  "/[locale]/account/settings": { "locale": string; }
  "/[locale]/action_center": { "locale": string; }
  "/[locale]/analytics": { "locale": string; }
  "/[locale]/bookings": { "locale": string; }
  "/[locale]/bookings/[id]": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/confirm": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/expenses": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/expenses/modify": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/expenses/new": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/modify": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/reconcile": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/transactions": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/transactions/modify": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/transactions/new": { "locale": string; "id": string; }
  "/[locale]/bookings/[id]/trip_logs": { "locale": string; "id": string; }
  "/[locale]/bookings/new": { "locale": string; }
  "/[locale]/change_password": { "locale": string; }
  "/[locale]/customers": { "locale": string; }
  "/[locale]/customers/[id]": { "locale": string; "id": string; }
  "/[locale]/customers/[id]/modify": { "locale": string; "id": string; }
  "/[locale]/customers/new": { "locale": string; }
  "/[locale]/drivers": { "locale": string; }
  "/[locale]/drivers/[id]": { "locale": string; "id": string; }
  "/[locale]/drivers/[id]/leaves": { "locale": string; "id": string; }
  "/[locale]/drivers/[id]/leaves/modify": { "locale": string; "id": string; }
  "/[locale]/drivers/[id]/leaves/new": { "locale": string; "id": string; }
  "/[locale]/drivers/[id]/modify": { "locale": string; "id": string; }
  "/[locale]/drivers/new": { "locale": string; }
  "/[locale]/faq": { "locale": string; }
  "/[locale]/features": { "locale": string; }
  "/[locale]/forgot_password": { "locale": string; }
  "/[locale]/home": { "locale": string; }
  "/[locale]/login": { "locale": string; }
  "/[locale]/onboarding": { "locale": string; }
  "/[locale]/onboarding/add_driver": { "locale": string; }
  "/[locale]/onboarding/add_user": { "locale": string; }
  "/[locale]/onboarding/add_vehicle": { "locale": string; }
  "/[locale]/onboarding/create_agency": { "locale": string; }
  "/[locale]/onboarding/success": { "locale": string; }
  "/[locale]/pricing": { "locale": string; }
  "/[locale]/signup": { "locale": string; }
  "/[locale]/users": { "locale": string; }
  "/[locale]/users/[id]": { "locale": string; "id": string; }
  "/[locale]/users/[id]/modify": { "locale": string; "id": string; }
  "/[locale]/users/new": { "locale": string; }
  "/[locale]/vehicles": { "locale": string; }
  "/[locale]/vehicles/[id]": { "locale": string; "id": string; }
  "/[locale]/vehicles/[id]/modify": { "locale": string; "id": string; }
  "/[locale]/vehicles/[id]/vehicle_services": { "locale": string; "id": string; }
  "/[locale]/vehicles/[id]/vehicle_services/modify": { "locale": string; "id": string; }
  "/[locale]/vehicles/[id]/vehicle_services/new": { "locale": string; "id": string; }
  "/[locale]/vehicles/new": { "locale": string; }
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/[locale]": never
  "/[locale]/onboarding": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
